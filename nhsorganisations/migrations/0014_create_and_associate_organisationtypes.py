# Generated by Django 3.0.6 on 2020-05-06 14:05
from uuid import UUID
from django.db import migrations


TYPE_PROVIDER = 'provider'
TYPE_INDEPENDENT_PROVIDER = 'independent-provider'
TYPE_COMMISSIONER = 'commissioner'
TYPE_ALB = 'alb'
TYPE_LOCAL_AUTHORITY = 'local-authority'
TYPE_PATHOLOGY_JV = 'pathology-jv'
TYPE_GP = 'gp-practice'
TYPE_DENTIST = 'dentist'
TYPE_PHARMACY = 'pharmacy'
TYPE_OTHER = 'other'

TO_CREATE = (
    {
        'id': UUID('2ac9aa26-214f-4b5f-8cd3-958bcc44cb93'),
        'mnemonic': TYPE_PROVIDER,
        'name': 'Providers',
        'name_singular': "Provider",
    },
    {
        'id': UUID('1b3fb5d1-010b-4bfd-a37d-4b99b12f81db'),
        'mnemonic': TYPE_INDEPENDENT_PROVIDER,
        'name': 'Independent Providers',
        'name_singular': "Independent Provider",
    },
    {
        'id': UUID('38e3d1b8-6014-44ab-b4f0-8cd150cfb1ac'),
        'mnemonic': TYPE_COMMISSIONER,
        'name': "Commissioners",
        'name_singular': "Commissioner",
    },
    {
        'id': UUID('f65199de-1edb-418f-b8e2-50fe1bd5b168'),
        'mnemonic': TYPE_ALB,
        'name': "Arm's Length Bodies",
        'name_singular': "Arm's Length Body",
    },
    {
        'id': UUID('8a06d0d9-de32-49fe-b338-ac58c36c94f9'),
        'mnemonic': TYPE_LOCAL_AUTHORITY,
        'name': "Local Authorities",
        'name_singular': "Local Authority",
    },
    {
        'id': UUID('44a535bb-a2d3-4126-81ec-36babf4dc554'),
        'mnemonic': TYPE_PATHOLOGY_JV,
        'name': "Pathology Joint Ventures",
        'name_singular': "Pathology Joint Ventures",
    },
    {
        'id': UUID('31c6e842-635c-4e11-856c-c9ab7466871a'),
        'mnemonic': TYPE_GP,
        'name': "GP Practices",
        'name_singular': "GP Practice",
    },
    {
        'id': UUID('ce0d2ed3-f54e-41cf-8cf1-533118c05013'),
        'mnemonic': TYPE_DENTIST,
        'name': "Dental Practices",
        'name_singular': "Dental Practice",
    },
    {
        'id': UUID('8a25d42e-9c2e-4ae7-a50a-dc09a6189286'),
        'mnemonic': TYPE_PHARMACY,
        'name': "Pharmacies",
        'name_singular': "Pharmacy",
    },
    {
        'id': UUID('99ccccb6-4b9a-43ff-96f4-cf2eb386c040'),
        'mnemonic': 'community-pharmacy',
        'name': "Community Pharmacies",
        'name_singular': "Community Pharmacy",
    },
    {
        'id': UUID('31cdcd93-e43b-4324-abf8-228edffd817a'),
        'mnemonic': 'prison',
        'name': "Prison Health",
        'name_singular': "Prison Health",
    },
    {
        'id': UUID('2900129b-e204-4105-b4e2-715ca92f980e'),
        'mnemonic': 'sarc',
        'name': "Adult and Paediatric Sexual Assault Referral Centres",
        'name_singular': "Adult and Paediatric Sexual Assault Referral Centre",
    },
)


def create_organisationtypes(apps, schema_editor):
    OrganisationType = apps.get_model("organisations", "OrganisationType")
    object_list = []
    for details in TO_CREATE:
        object_list.append(OrganisationType(**details))
    OrganisationType.objects.bulk_create(object_list)


def delete_organisationtypes(apps, schema_editor):
    OrganisationType = apps.get_model("organisations", "OrganisationType")
    OrganisationType.objects.delete()


def associate_organisations(apps, schema_editor):
    OrganisationType = apps.get_model("organisations", "OrganisationType")
    Organisation = apps.get_model("organisations", "Organisation")
    for ot in OrganisationType.objects.all():
        Organisation.objects.filter(organisation_type=ot.mnemonic).update(type=ot)


def dissociate_organisations(apps, schema_editor):
    Organisation = apps.get_model("organisations", "Organisation")
    Organisation.objects.all().update(type=None)


class Migration(migrations.Migration):

    dependencies = [
        ('nhsorganisations', '0013_add_organisationtype_model'),
    ]

    operations = [
        migrations.RunPython(create_organisationtypes, delete_organisationtypes),
        migrations.RunPython(associate_organisations, dissociate_organisations),
    ]
